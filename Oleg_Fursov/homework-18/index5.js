// !ДОМАШНЕЕ ЗАДАНИЕ
//   !Задание 1:
//     ///?Написать регулярное выражение, которое будет тестировать на соответствие строки вида - name_surname-1234@gmail.com :
//     ///?  - имя и фамилия должны состоять только из англ. букв и быть длиной (каждая часть) от 3 до 10 символов, между
//         ними _ обязательно
//     // ? - далее опциональная часть, начинающаяся с тире и состоящая из 4-х цифр
//     // ? - затем обязательный знак @
//    //  ? - название почтового сервиса должно быть длиной от 2-х до 20-ти символов, может состоять из букв английского
//         алфавита и цифр, а также опционально может содержать в центре себя одно тире или одну точку
//     // ? - сделать так, чтобы точка или тире, указанные выше, могли содержаться в любом месте внутри почтового сервиса,
//         кроме начала и конца *
//     // ? - обязательная часть .com
//    ///? Регистр учитываться не должен. Хорошо протестировать регулярное выражение.


const regExpresion = (str) => (/^[a-z]{3,10}[\_]{1,1}[a-z]{3,10}[\-][\d]{4}@[\w-\.\d]{2,20}\.com/ig.test(str))
console.log(regExpresion('name_surname-1243@gmial.com'));


//   !Задание 2:
//    ///? Написать функцию, которая с помощью регулярного выражения будет тестировать на соответствие строки вида:
//       +375-25-777-77-77
//       375299999999
//       8-044-444-44-44
//       8033-6666666
//    /// ?и возвращать boolean.
//     ///?Условия:
//       - + перед 375 - опциональный
//       - номер может начинаться с 375 (без 0) либо с 80
//       - номер должен содержать один из кодов - 25, 29, 33, 44 либо 17
//       - основная часть номера не может начинаться с 0
//       - некоторые или все тире могут быть пропущены, но расположение тех, которые пропущены не будут, может быть только
//         таким, как в примерах 1 и 3

const testNumber = (num) => {
    return /^((8|\+375)[\-]?)?(\(?\d{3}\)?[\-]?)?[\d\-]{12,16}$/g.test(num);
}
console.log(testNumber('8025-777-7777'));
//    ///? Перед отправкой постараться максимально оптимизировать своё решение и убрать все лишнее.

//   !Задание 3:
//     ///?Переписать решение задачи с поиском гласных с использованием регулярного выражения. Протестировать ситуацию, когда
//    // ?гласных в переданном тексте будет 0. Регистр не учитывать. По возможности придумать несколько вариантов решения.


const findVowels = (str) => {
    var sim = str.match(/[^аеоуиыэюя]/ig).join('')
    return str.length - sim.length;
}
console.log(findVowels('рентгеноэлектрокардиографический'));


const sumVowels = (str) => {
    vowels = str.match(/[аеоуиыэюя]/ig);
    return vowels == undefined ? 0 : vowels.reduce((sum, e, i) => {
        return i + 1
    }, 0);

}
console.log(sumVowels('рентгеноэлектрокардиографический'));


// * !Задание 3:
// *  ? Написать функцию, которая будет возвращать количество гласных в переданном тексте. Регистр любой. Решение не
// *  ?должно быть "топорным".
// */

function getSumvowels(str) {
    var vowels = "аеоуиыэюя";
    return str.toLowerCase().split('').reduce((sum, value) => {
        vowels.includes(value) ? sum++ : 0;
        return sum;
    }, 0);
}
console.log(getSumvowels('рентгеноэлектрокардиографический'));



//   !Задание 4:
//     ?Создать свой первый PR со своей папкой.